{"version":3,"sources":["components/Cards/Cards.module.css","App.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","image/logo.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infacted","CardContent","Typography","blue","varient","start","end","value","duration","separator","color","Date","toDateString","green","red","url","fetchData","country","a","changableURL","axios","get","modifiedData","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","backgroundColor","fill","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","logospin","src","Logo","alt","logofont","c2","c1","c3","c4","toTimeString","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25cf5ce8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3fodz\",\"card\":\"Cards_card__1KHNp\",\"infacted\":\"Cards_infacted__2_eY3\",\"recovered\":\"Cards_recovered__1p5L3\",\"deaths\":\"Cards_deaths__3sYfD\",\"red\":\"Cards_red__2jzUD\",\"blue\":\"Cards_blue__2sho_\",\"green\":\"Cards_green__183h-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3yal-\",\"logofont\":\"App_logofont__3ocCY\",\"logospin\":\"App_logospin__1jMZ7\",\"spin\":\"App_spin__21d7N\",\"logo\":\"App_logo__3sbbQ\",\"c1\":\"App_c1__3N9LN\",\"c2\":\"App_c2__2MsmH\",\"c3\":\"App_c3__2HlWC\",\"c4\":\"App_c4__jvUD-\"};","import React from 'react';\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core'\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nconst Cards = ( {data : { confirmed, recovered, deaths, lastUpdate}}) => {\n    if(!confirmed){\n        return \"Loading...\";\n    }\n    console.log(confirmed)\n    return(\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infacted)}>\n                    <CardContent>\n                        <Typography className={styles.blue}><strong>Infacted</strong></Typography>\n                        <Typography varient=\"h5\">\n                            <CountUp start={0} end={confirmed.value} duration={2} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography varient=\"body2\">Number of Active cases in COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography className={styles.green}><strong>Recovered</strong></Typography>\n                        <Typography varient=\"h5\">\n                            <CountUp start={0} end={recovered.value} duration={2} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography varient=\"body2\">Last Update</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography className={styles.red}><strong>Deaths</strong></Typography>\n                        <Typography varient=\"h5\">\n                            <CountUp start={0} end={deaths.value} duration={2} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios'; // Use to request API\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async(country) =>{\n    let changableURL = url;\n    if(country){\n        changableURL = `${url}/countries/${country}`\n    }\n    try{\n        const {data : {confirmed,recovered,deaths,lastUpdate}} = await axios.get(changableURL);\n        \n        const modifiedData = { confirmed, recovered, deaths, lastUpdate}\n        return modifiedData;   \n    } catch(err){\n        console.log(\"Error in API Request\");\n    }\n}\n\nexport const fetchDailyData = async() =>{\n    try{\n        const {data} = await axios.get(`${url}/daily`);\n        \n        const modifiedData = data.map((dailyData) => ({\n            confirmed : dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date:dailyData.reportDate,\n        }));\n        return modifiedData;   \n    } catch(err){\n        console.log(\"Error in API Request\");\n    }\n}\n\nexport const fetchCountries = async() =>{\n    try{\n        const {data:{countries}} = await axios.get(`${url}/countries`);\n        \n        return countries.map((country) => country.name);   \n    } catch(err){\n        console.log(\"Error in API Request\");\n    }\n}","import React, {useState,useEffect} from 'react';\nimport {fetchDailyData} from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({data:{confirmed,recovered,deaths},country}) => {\n    const [dailyData, setDailyData] = useState();\n    \n    useEffect(() => {\n        const fetchAPI = async() =>{\n            setDailyData(await fetchDailyData())\n        }\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData\n        ? (\n            <Line  \n                data ={{\n                    labels: dailyData.map(({date}) => date),\n                    datasets:[{\n                        data: dailyData.map(({confirmed}) => confirmed),\n                        label: \"Infected\",\n                        borderColor: \"blue\",\n                        backgroundColor: \"#111\",\n                        fill: true,\n                    },\n                    {\n                        data: dailyData.map(({deaths}) => deaths),\n                        label: \"Deaths\",\n                        borderColor: \"red\",\n                        backgroundColor: \"red\",\n                        fill: true,\n                    },],\n                }}\n            />\n        ) : \n        null\n    );\n\n    const barChart = (\n        confirmed \n        ?\n        <Bar \n            data ={{\n                labels:['Infacted','Recovered','Deaths'],\n                datasets:[{\n                    label:'People',\n                    backgroundColor: ['blue', 'green','red'],\n                    data:[confirmed.value,recovered.value,deaths.value]\n                }]\n            }}\n            options={{\n                legend : {display:false},\n                title : {display:true, text: `Current Status of ${country}` }\n            }} \n            />\n        :\n        null\n    )\n\n    return(\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, {useState, useEffect} from 'react';\nimport {NativeSelect, FormControl} from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({handleCountryChange}) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]); \n    \n    useEffect(()=>{\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n\n        fetchAPI();\n    }, [setFetchedCountries])\n\n    return(\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i) => \n                    <option key={i} value={country}>{country}</option>\n                )}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React,{Component} from 'react';\nimport {Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport {fetchData} from './api';\nimport Logo from './image/logo.png'\nclass App extends Component {\n    state = {\n        data :{},\n        country:\"\",\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n        this.setState({data:fetchedData});\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        this.setState({\n            data:fetchedData,\n            country:country\n        });\n    }\n\n    render() {\n        const {data, country} = this.state;\n        return (\n            <div className={styles.container}>\n                <div className={styles.container}>\n                    <img className={styles.logospin} src={Logo} alt=\"COVID-19\" />\n                    <p className={styles.logofont}>\n                        <span className={styles.c2}>Online </span>\n                        <span className={styles.c1}>COVID-19 </span>\n                        <span className={styles.c3}>Record </span>\n                        <span className={styles.c4}>Tracker</span>\n                    </p>\n                    <small>Last Update: {new Date(data.lastUpdate).toTimeString()}</small>\n                </div>\n                <Cards data={data} />\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <Chart data={data}  country={country} />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2tbC5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1h6NM\"};","module.exports = __webpack_public_path__ + \"static/media/logo.662041f6.png\";"],"sourceRoot":""}